{
  "contractName": "PurchaseAgreement",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum PurchaseAgreement.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmPurhcase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paySeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "abort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmPurhcase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paySeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum PurchaseAgreement.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"The function cannot be called at the current state\"}],\"OnlyBuyer()\":[{\"notice\":\"Only the buyer can call this function\"}],\"OnlySeller()\":[{\"notice\":\"Only the Seller can call this function\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PurchaseAgreement.sol\":\"PurchaseAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PurchaseAgreement.sol\":{\"keccak256\":\"0x35caeed99334edf711b3d6457e6337c0e7faddc04542b68567c9ee37c423948b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873a65dc3438338a18af783d56bb501efb500f5163260690035128c46a254e9d\",\"dweb:/ipfs/QmPKSGjW3K9m2fGSAq19SbECS834Jj55uxRJZQ9YAWFv6p\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002346100529190610096565b6000819055506100c7565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006100a18261005d565b91506100ac8361005d565b9250826100bc576100bb610067565b5b828204905092915050565b610a44806100d66000396000f3fe60806040526004361061007b5760003560e01c806371d6fccf1161004e57806371d6fccf1461011857806373fac6f014610122578063a0c97bce14610139578063c19d93fb146101505761007b565b806308551a531461008057806335a063b4146100ab5780633fa4f245146100c25780637150d8ae146100ed575b600080fd5b34801561008c57600080fd5b5061009561017b565b6040516100a29190610801565b60405180910390f35b3480156100b757600080fd5b506100c06101a1565b005b3480156100ce57600080fd5b506100d761032d565b6040516100e49190610835565b60405180910390f35b3480156100f957600080fd5b50610102610333565b60405161010f9190610801565b60405180910390f35b610120610359565b005b34801561012e57600080fd5b50610137610486565b005b34801561014557600080fd5b5061014e610613565b005b34801561015c57600080fd5b506101656107ad565b60405161017291906108c7565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610228576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561023d5761023c610850565b5b600260149054906101000a900460ff16600381111561025f5761025e610850565b5b14610296576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff021916908360038111156102bc576102bb610850565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610329573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600381111561036e5761036d610850565b5b600260149054906101000a900460ff1660038111156103905761038f610850565b5b146103c7576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026103d69190610911565b3414610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e906109ee565b60405180910390fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600381111561047e5761047d610850565b5b021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050d576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561052257610521610850565b5b600260149054906101000a900460ff16600381111561054457610543610850565b5b1461057b576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060146101000a81548160ff021916908360038111156105a05761059f610850565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561060f573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069a576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156106af576106ae610850565b5b600260149054906101000a900460ff1660038111156106d1576106d0610850565b5b14610708576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff0219169083600381111561072e5761072d610850565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361077e9190610911565b9081150290604051600060405180830381858888f193505050501580156107a9573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107eb826107c0565b9050919050565b6107fb816107e0565b82525050565b600060208201905061081660008301846107f2565b92915050565b6000819050919050565b61082f8161081c565b82525050565b600060208201905061084a6000830184610826565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106108905761088f610850565b5b50565b60008190506108a18261087f565b919050565b60006108b182610893565b9050919050565b6108c1816108a6565b82525050565b60006020820190506108dc60008301846108b8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061091c8261081c565b91506109278361081c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109605761095f6108e2565b5b828202905092915050565b600082825260208201905092915050565b7f506c656173652073656e6420696e20327820746865207075726863617365206160008201527f6d6f756e74000000000000000000000000000000000000000000000000000000602082015250565b60006109d860258361096b565b91506109e38261097c565b604082019050919050565b60006020820190508181036000830152610a07816109cb565b905091905056fea26469706673582212208078355073a7eb39836ed2d12eef05aa9add7cd481d99d8197aa6e2dd0afb21464736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806371d6fccf1161004e57806371d6fccf1461011857806373fac6f014610122578063a0c97bce14610139578063c19d93fb146101505761007b565b806308551a531461008057806335a063b4146100ab5780633fa4f245146100c25780637150d8ae146100ed575b600080fd5b34801561008c57600080fd5b5061009561017b565b6040516100a29190610801565b60405180910390f35b3480156100b757600080fd5b506100c06101a1565b005b3480156100ce57600080fd5b506100d761032d565b6040516100e49190610835565b60405180910390f35b3480156100f957600080fd5b50610102610333565b60405161010f9190610801565b60405180910390f35b610120610359565b005b34801561012e57600080fd5b50610137610486565b005b34801561014557600080fd5b5061014e610613565b005b34801561015c57600080fd5b506101656107ad565b60405161017291906108c7565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610228576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561023d5761023c610850565b5b600260149054906101000a900460ff16600381111561025f5761025e610850565b5b14610296576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff021916908360038111156102bc576102bb610850565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610329573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600381111561036e5761036d610850565b5b600260149054906101000a900460ff1660038111156103905761038f610850565b5b146103c7576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026103d69190610911565b3414610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e906109ee565b60405180910390fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600381111561047e5761047d610850565b5b021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050d576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561052257610521610850565b5b600260149054906101000a900460ff16600381111561054457610543610850565b5b1461057b576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060146101000a81548160ff021916908360038111156105a05761059f610850565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561060f573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069a576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156106af576106ae610850565b5b600260149054906101000a900460ff1660038111156106d1576106d0610850565b5b14610708576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff0219169083600381111561072e5761072d610850565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361077e9190610911565b9081150290604051600060405180830381858888f193505050501580156107a9573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107eb826107c0565b9050919050565b6107fb816107e0565b82525050565b600060208201905061081660008301846107f2565b92915050565b6000819050919050565b61082f8161081c565b82525050565b600060208201905061084a6000830184610826565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106108905761088f610850565b5b50565b60008190506108a18261087f565b919050565b60006108b182610893565b9050919050565b6108c1816108a6565b82525050565b60006020820190506108dc60008301846108b8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061091c8261081c565b91506109278361081c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109605761095f6108e2565b5b828202905092915050565b600082825260208201905092915050565b7f506c656173652073656e6420696e20327820746865207075726863617365206160008201527f6d6f756e74000000000000000000000000000000000000000000000000000000602082015250565b60006109d860258361096b565b91506109e38261097c565b604082019050919050565b60006020820190508181036000830152610a07816109cb565b905091905056fea26469706673582212208078355073a7eb39836ed2d12eef05aa9add7cd481d99d8197aa6e2dd0afb21464736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:650:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:1",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:1"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "304:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "314:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "314:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "276:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "504:143:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "514:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "537:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "519:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "514:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "571:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "553:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "548:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "597:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:1"
                  },
                  "nodeType": "YulIf",
                  "src": "582:35:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "627:14:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "636:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "639:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "627:1:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "493:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "496:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "502:1:1",
                "type": ""
              }
            ],
            "src": "462:185:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3791:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:1",
                "type": ""
              }
            ],
            "src": "139:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:1",
                "type": ""
              }
            ],
            "src": "249:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:1",
                "type": ""
              }
            ],
            "src": "397:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "702:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "712:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "723:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "712:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "694:7:1",
                "type": ""
              }
            ],
            "src": "657:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "822:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "845:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "827:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "793:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "800:3:1",
                "type": ""
              }
            ],
            "src": "740:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "962:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "972:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "972:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1008:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1008:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "957:4:1",
                "type": ""
              }
            ],
            "src": "864:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1120:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1130:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1234:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1227:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1227:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1258:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1261:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1092:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1363:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1365:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1365:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1365:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1352:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:1:1",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1349:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1339:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$31",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1322:5:1",
                "type": ""
              }
            ],
            "src": "1278:113:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1450:74:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1460:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1471:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1460:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1512:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$31",
                      "nodeType": "YulIdentifier",
                      "src": "1477:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:41:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$31",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1432:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1442:7:1",
                "type": ""
              }
            ],
            "src": "1397:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1596:61:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1606:45:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1645:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$31",
                      "nodeType": "YulIdentifier",
                      "src": "1619:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:32:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1606:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$31_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1586:9:1",
                "type": ""
              }
            ],
            "src": "1530:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:72:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1751:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1793:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$31_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1756:36:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:56:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$31_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1722:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1729:3:1",
                "type": ""
              }
            ],
            "src": "1663:143:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1916:130:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1926:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1938:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1949:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1934:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1926:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2012:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2036:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$31_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1962:49:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:77:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1962:77:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$31__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1888:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1900:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1911:4:1",
                "type": ""
              }
            ],
            "src": "1812:234:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2100:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2187:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2187:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2221:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2211:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2211:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2211:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2052:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2296:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2319:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2301:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2296:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2353:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2335:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2330:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2528:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2530:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2530:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2530:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2440:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2433:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2433:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2426:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2448:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2455:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2523:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2451:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2451:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2445:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2422:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2419:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2560:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2575:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2578:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2571:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2560:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2269:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2272:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2278:7:1",
                "type": ""
              }
            ],
            "src": "2238:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2688:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2705:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2710:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2698:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2698:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2726:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2745:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2750:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2741:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2741:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2726:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2660:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2665:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2676:11:1",
                "type": ""
              }
            ],
            "src": "2592:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2873:118:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2895:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2903:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2891:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2891:14:1"
                      },
                      {
                        "hexValue": "506c656173652073656e6420696e203278207468652070757268636173652061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2907:34:1",
                        "type": "",
                        "value": "Please send in 2x the purhcase a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2884:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2884:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2884:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2963:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2971:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2959:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2959:15:1"
                      },
                      {
                        "hexValue": "6d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2976:7:1",
                        "type": "",
                        "value": "mount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2952:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:32:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2952:32:1"
                }
              ]
            },
            "name": "store_literal_in_memory_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2865:6:1",
                "type": ""
              }
            ],
            "src": "2767:224:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3143:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3153:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3219:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3224:2:1",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3160:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3160:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3153:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3325:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512",
                      "nodeType": "YulIdentifier",
                      "src": "3236:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3236:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3338:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3354:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3345:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3338:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3131:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3139:3:1",
                "type": ""
              }
            ],
            "src": "2997:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3540:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3550:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3562:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3573:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3558:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3550:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3597:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3608:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3593:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3593:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3616:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3622:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3612:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3612:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3586:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3586:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3642:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3776:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3650:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3642:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3520:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3535:4:1",
                "type": ""
              }
            ],
            "src": "3369:419:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$31(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$31(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$31(value)\n    }\n\n    function convert_t_enum$_State_$31_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$31(value)\n    }\n\n    function abi_encode_t_enum$_State_$31_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$31_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$31__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$31_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please send in 2x the purhcase a\")\n\n        mstore(add(memPtr, 32), \"mount\")\n\n    }\n\n    function abi_encode_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "62:1652:0:-:0;;;149:10;132:6;;:28;;;;;;;;;;;;;;;;;;191:1;179:9;:13;;;;:::i;:::-;171:5;:21;;;;62:1652;;7:77:1;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;62:1652:0:-;;;;;;;",
  "deployedSourceMap": "62:1652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;232:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1556:149;;;;;;;;;;;;;:::i;:::-;;208:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;268:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:228;;;:::i;:::-;;1265:140;;;;;;;;;;;;;:::i;:::-;;1413:135;;;;;;;;;;;;;:::i;:::-;;358:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;232:29;;;;;;;;;;;;;:::o;1556:149::-;947:6;;;;;;;;;;;933:20;;:10;:20;;;930:70;;976:12;;;;;;;;;;;;;;930:70;1601:13:::1;682:6;673:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;670:67;;711:14;;;;;;;;;;;;;;670:67;1634:14:::2;1626:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1659:6;;;;;;;;;;;:15;;:38;1675:21;1659:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1010:1:::1;1556:149::o:0;208:17::-;;;;:::o;268:28::-;;;;;;;;;;;;;:::o;1029:228::-;1073:13;682:6;673:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;670:67;;711:14;;;;;;;;;;;;;;670:67;1132:5:::1;;1129:1;:8;;;;:::i;:::-;1115:9;:23;1107:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1207:10;1191:5;;:27;;;;;;;;;;;;;;;;;;1237:12;1229:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1029:228:::0;:::o;1265:140::-;816:5;;;;;;;;;;;802:19;;:10;:19;;;799:68;;844:11;;;;;;;;;;;;;;799:68;1319:12:::1;682:6;673:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;670:67;;711:14;;;;;;;;;;;;;;670:67;1352:13:::2;1344:5:::0;::::2;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1376:5;;;;;;;;;;;:14;;:21;1391:5;;1376:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;877:1:::1;1265:140::o:0;1413:135::-;947:6;;;;;;;;;;;933:20;;:10;:20;;;930:70;;976:12;;;;;;;;;;;;;;930:70;1462:13:::1;682:6;673:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;670:67;;711:14;;;;;;;;;;;;;;670:67;1493:14:::2;1485:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1516:6;;;;;;;;;;;:15;;:24;1534:5;;1532:1;:7;;;;:::i;:::-;1516:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1010:1:::1;1413:135::o:0;358:18::-;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:77::-;694:7;723:5;712:16;;657:77;;;:::o;740:118::-;827:24;845:5;827:24;:::i;:::-;822:3;815:37;740:118;;:::o;864:222::-;957:4;995:2;984:9;980:18;972:26;;1008:71;1076:1;1065:9;1061:17;1052:6;1008:71;:::i;:::-;864:222;;;;:::o;1092:180::-;1140:77;1137:1;1130:88;1237:4;1234:1;1227:15;1261:4;1258:1;1251:15;1278:113;1359:1;1352:5;1349:12;1339:46;;1365:18;;:::i;:::-;1339:46;1278:113;:::o;1397:127::-;1442:7;1471:5;1460:16;;1477:41;1512:5;1477:41;:::i;:::-;1397:127;;;:::o;1530:::-;1586:9;1619:32;1645:5;1619:32;:::i;:::-;1606:45;;1530:127;;;:::o;1663:143::-;1756:43;1793:5;1756:43;:::i;:::-;1751:3;1744:56;1663:143;;:::o;1812:234::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1962:77;2036:1;2025:9;2021:17;2012:6;1962:77;:::i;:::-;1812:234;;;;:::o;2052:180::-;2100:77;2097:1;2090:88;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2238:348;2278:7;2301:20;2319:1;2301:20;:::i;:::-;2296:25;;2335:20;2353:1;2335:20;:::i;:::-;2330:25;;2523:1;2455:66;2451:74;2448:1;2445:81;2440:1;2433:9;2426:17;2422:105;2419:131;;;2530:18;;:::i;:::-;2419:131;2578:1;2575;2571:9;2560:20;;2238:348;;;;:::o;2592:169::-;2676:11;2710:6;2705:3;2698:19;2750:4;2745:3;2741:14;2726:29;;2592:169;;;;:::o;2767:224::-;2907:34;2903:1;2895:6;2891:14;2884:58;2976:7;2971:2;2963:6;2959:15;2952:32;2767:224;:::o;2997:366::-;3139:3;3160:67;3224:2;3219:3;3160:67;:::i;:::-;3153:74;;3236:93;3325:3;3236:93;:::i;:::-;3354:2;3349:3;3345:12;3338:19;;2997:366;;;:::o;3369:419::-;3535:4;3573:2;3562:9;3558:18;3550:26;;3622:9;3616:4;3612:20;3608:1;3597:9;3593:17;3586:47;3650:131;3776:4;3650:131;:::i;:::-;3642:139;;3369:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.11;\r\n\r\ncontract PurchaseAgreement{\r\n\r\n       constructor() payable{\r\n        seller = payable(msg.sender);\r\n        value = msg.value / 2;\r\n    }\r\n\r\n    uint public value;\r\n    address payable public seller;\r\n    address payable public buyer;\r\n\r\n    enum State {Created, Locked, Release, Inactive}\r\n    State public state;\r\n\r\n    \r\n    /// The function cannot be called at the current state\r\n    error InvalidState();\r\n\r\n    /// Only the buyer can call this function\r\n    error OnlyBuyer();\r\n\r\n     /// Only the Seller can call this function\r\n    error OnlySeller();\r\n\r\n    modifier inState(State state_){\r\n        if(state != state_){\r\n            revert InvalidState();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier onlyBuyer(){\r\n        if(msg.sender != buyer){\r\n            revert OnlyBuyer();\r\n        }\r\n        _;\r\n    }\r\n\r\n        modifier onlySeller(){\r\n        if(msg.sender != seller){\r\n            revert OnlySeller();\r\n        }\r\n        _;\r\n    }\r\n\r\n\r\n    function confirmPurhcase() external inState(State.Created) payable {\r\n        require(msg.value == (2* value), \"Please send in 2x the purhcase amount\");\r\n        buyer = payable(msg.sender);\r\n        state = State.Locked;\r\n    }\r\n\r\n    function confirmReceived() external onlyBuyer inState(State.Locked) {\r\n        state = State.Release;\r\n        buyer.transfer(value);\r\n    }\r\n\r\n    function paySeller() external onlySeller inState(State.Release){\r\n      state = State.Inactive;\r\n      seller.transfer(3*value);\r\n    }\r\n\r\n    function abort() external onlySeller inState(State.Created){\r\n        state = State.Inactive;\r\n        seller.transfer(address(this).balance);\r\n    }\r\n\r\n\r\n\r\n}",
  "sourcePath": "C:\\testas\\blockchain\\ethereum-ex\\contracts\\PurchaseAgreement.sol",
  "ast": {
    "absolutePath": "project:/contracts/PurchaseAgreement.sol",
    "exportedSymbols": {
      "PurchaseAgreement": [
        186
      ]
    },
    "id": 187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:25:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PurchaseAgreement",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186
        ],
        "name": "PurchaseAgreement",
        "nameLocation": "71:17:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "121:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "132:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 7,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "149:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "149:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "141:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "141:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "141:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "132:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "132:28:0"
                },
                {
                  "expression": {
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "171:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 13,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "179:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "179:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "191:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "179:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "171:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "171:21:0"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "111:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "121:0:0"
            },
            "scope": 186,
            "src": "100:100:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 22,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "220:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "208:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "208:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 24,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "255:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "232:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "232:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 26,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "291:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "268:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "268:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PurchaseAgreement.State",
            "id": 31,
            "members": [
              {
                "id": 27,
                "name": "Created",
                "nameLocation": "317:7:0",
                "nodeType": "EnumValue",
                "src": "317:7:0"
              },
              {
                "id": 28,
                "name": "Locked",
                "nameLocation": "326:6:0",
                "nodeType": "EnumValue",
                "src": "326:6:0"
              },
              {
                "id": 29,
                "name": "Release",
                "nameLocation": "334:7:0",
                "nodeType": "EnumValue",
                "src": "334:7:0"
              },
              {
                "id": 30,
                "name": "Inactive",
                "nameLocation": "343:8:0",
                "nodeType": "EnumValue",
                "src": "343:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "310:5:0",
            "nodeType": "EnumDefinition",
            "src": "305:47:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 34,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "371:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "358:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$31",
              "typeString": "enum PurchaseAgreement.State"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31,
                "src": "358:5:0"
              },
              "referencedDeclaration": 31,
              "src": "358:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$31",
                "typeString": "enum PurchaseAgreement.State"
              }
            },
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "391:54:0",
              "text": "The function cannot be called at the current state"
            },
            "id": 37,
            "name": "InvalidState",
            "nameLocation": "457:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:0"
            },
            "src": "451:21:0"
          },
          {
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "480:41:0",
              "text": "Only the buyer can call this function"
            },
            "id": 40,
            "name": "OnlyBuyer",
            "nameLocation": "533:9:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:0"
            },
            "src": "527:18:0"
          },
          {
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "554:42:0",
              "text": "Only the Seller can call this function"
            },
            "id": 43,
            "name": "OnlySeller",
            "nameLocation": "608:10:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:2:0"
            },
            "src": "602:19:0"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "659:97:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "673:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 49,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "682:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "673:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55,
                  "nodeType": "IfStatement",
                  "src": "670:67:0",
                  "trueBody": {
                    "id": 54,
                    "nodeType": "Block",
                    "src": "689:48:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51,
                            "name": "InvalidState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "711:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "711:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53,
                        "nodeType": "RevertStatement",
                        "src": "704:21:0"
                      }
                    ]
                  }
                },
                {
                  "id": 56,
                  "nodeType": "PlaceholderStatement",
                  "src": "747:1:0"
                }
              ]
            },
            "id": 58,
            "name": "inState",
            "nameLocation": "638:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "652:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "646:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$31",
                    "typeString": "enum PurchaseAgreement.State"
                  },
                  "typeName": {
                    "id": 45,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "646:5:0"
                    },
                    "referencedDeclaration": 31,
                    "src": "646:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:14:0"
            },
            "src": "629:127:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "788:98:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 60,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "802:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "802:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 62,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "816:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "802:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "IfStatement",
                  "src": "799:68:0",
                  "trueBody": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "822:45:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 64,
                            "name": "OnlyBuyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "844:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "844:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "RevertStatement",
                        "src": "837:18:0"
                      }
                    ]
                  }
                },
                {
                  "id": 69,
                  "nodeType": "PlaceholderStatement",
                  "src": "877:1:0"
                }
              ]
            },
            "id": 71,
            "name": "onlyBuyer",
            "nameLocation": "777:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:2:0"
            },
            "src": "768:118:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "919:100:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 73,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "933:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "933:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 75,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "947:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "933:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "IfStatement",
                  "src": "930:70:0",
                  "trueBody": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "954:46:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 77,
                            "name": "OnlySeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "976:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79,
                        "nodeType": "RevertStatement",
                        "src": "969:19:0"
                      }
                    ]
                  }
                },
                {
                  "id": 82,
                  "nodeType": "PlaceholderStatement",
                  "src": "1010:1:0"
                }
              ]
            },
            "id": 84,
            "name": "onlySeller",
            "nameLocation": "907:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:2:0"
            },
            "src": "898:121:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1096:161:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1115:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1115:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1129:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 95,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1132:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1129:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 97,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1128:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1115:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420696e2032782074686520707572686361736520616d6f756e74",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512",
                          "typeString": "literal_string \"Please send in 2x the purhcase amount\""
                        },
                        "value": "Please send in 2x the purhcase amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9820cf1ac0899af61b0a4ff314e5b61fbe021043305613cf7544648d246c2512",
                          "typeString": "literal_string \"Please send in 2x the purhcase amount\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1107:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:73:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1191:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1207:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1207:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1199:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1199:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1191:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:27:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1229:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 111,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1237:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1237:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1229:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:20:0"
                }
              ]
            },
            "functionSelector": "71d6fccf",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 87,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1073:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 27,
                    "src": "1073:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 89,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1065:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1065:22:0"
              }
            ],
            "name": "confirmPurhcase",
            "nameLocation": "1038:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:2:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:0"
            },
            "scope": 186,
            "src": "1029:228:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1333:72:0",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1344:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 126,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1352:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1352:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1344:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1391:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 130,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1376:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1376:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:21:0"
                }
              ]
            },
            "functionSelector": "73fac6f0",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71,
                  "src": "1301:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1301:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 121,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1319:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "1319:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1311:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1311:21:0"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "1274:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:2:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:0:0"
            },
            "scope": 186,
            "src": "1265:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1476:72:0",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 146,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1485:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 147,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1493:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1485:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1532:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 155,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1534:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 151,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1516:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1516:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:24:0"
                }
              ]
            },
            "functionSelector": "a0c97bce",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 139,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "1443:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1443:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 142,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1462:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "1462:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 141,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1454:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:22:0"
              }
            ],
            "name": "paySeller",
            "nameLocation": "1422:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:2:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:0:0"
            },
            "scope": 186,
            "src": "1413:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1615:90:0",
              "statements": [
                {
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1626:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 170,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1634:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1634:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$31",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1626:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 179,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1683:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$186",
                                "typeString": "contract PurchaseAgreement"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$186",
                                "typeString": "contract PurchaseAgreement"
                              }
                            ],
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1675:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1675:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1675:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1675:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 174,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1659:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1659:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1659:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:38:0"
                }
              ]
            },
            "functionSelector": "35a063b4",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 162,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "1582:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1582:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 165,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1601:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$31_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 27,
                    "src": "1601:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$31",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 164,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1593:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1593:22:0"
              }
            ],
            "name": "abort",
            "nameLocation": "1565:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1570:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:0"
            },
            "scope": 186,
            "src": "1556:149:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 187,
        "src": "62:1652:0",
        "usedErrors": [
          37,
          40,
          43
        ]
      }
    ],
    "src": "33:1681:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x52893dA3DdBA91a05600694C721c17Ac60D211d7",
      "transactionHash": "0x3a6bd21be82203e8615b9e0028c12777ee7ffff2ba7945fc4bea326ad4af70ee"
    },
    "1670947028691": {
      "events": {},
      "links": {},
      "address": "0x548C5f443E752F129bCa2B9A9770Dac657Dcf4eD",
      "transactionHash": "0x1b7f6a07487e1b21944d36aa26126af33bbe5fd0a43cfc68d6fe7e111a4a7d58"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-14T08:32:25.479Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "The function cannot be called at the current state"
        }
      ],
      "OnlyBuyer()": [
        {
          "notice": "Only the buyer can call this function"
        }
      ],
      "OnlySeller()": [
        {
          "notice": "Only the Seller can call this function"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}